- name: k8s-1
  hosts: all
  become: true
  tasks:

    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list

    - name: Install Kubernetes binaries
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl

    - name: Configure node ip
      lineinfile:
        path: /etc/default/kubelet
        line: KUBELET_EXTRA_ARGS=--node-ip={{ ansible_facts['eth1']['ipv4']['address'] }}
        create: yes

    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

    - name: Setting kubectl alias and enabling kubectl bash completion
      command: "{{ item }}"
      with_items:
          - /bin/bash -c "sudo echo 'source <(kubectl completion bash)' >> /home/vagrant/.bashrc"
          - /bin/bash -c "sudo touch /etc/bash_completion.d/kubectl"
          - /bin/bash -c "sudo chmod 777 /etc/bash_completion.d/kubectl"
          - /bin/bash -c "kubectl completion bash > /etc/bash_completion.d/kubectl"
          - /bin/bash -c "sudo echo 'alias k=kubectl' >> /home/vagrant/.bashrc"
          - /bin/bash -c "sudo echo 'complete -F __start_kubectl k' >> /home/vagrant/.bashrc"      
  
- name: k8s-2
  hosts: admins
  become: true
  tasks:
    - name: Initialize Kubernetes cluster using kubeadm
      command: kubeadm init --apiserver-advertise-address="{{ ansible_facts['eth1']['ipv4']['address'] }}" --apiserver-cert-extra-sans="{{ ansible_facts['eth1']['ipv4']['address'] }}" --node-name master --pod-network-cidr={{ cidr_net }}/16 --ignore-preflight-errors=Swap

    - name: Setup kubeconfig for vagrant user
      command: "{{ item }}"
      with_items:
          - mkdir -p /home/vagrant/.kube
          - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
          - chown vagrant:docker /home/vagrant/.kube/config

    - name: Copy content of /etc/kubernetes/admin.conf
      command: "cat /etc/kubernetes/admin.conf"
      register: admin_conf

    - name: Copy kubeconfig to local file
      local_action: copy content="{{ admin_conf.stdout }}" dest=./admin.conf

    - name: Install Calico pod network
      become: false
      command: kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml

    - name: Patching Calico custom-resources.yaml
      command: "{{ item }}"
      with_items:
          - mkdir -p /home/vagrant/calico
          - wget https://docs.projectcalico.org/manifests/custom-resources.yaml -P /home/vagrant/calico
          - sed -i s/192.168.0.0/{{ cidr_net }}/g /home/vagrant/calico/custom-resources.yaml
        
    - name: Install Calico pod network
      become: false
      command: kubectl create -f /home/vagrant/calico/custom-resources.yaml

    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Copy join command to local file
      local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"

- name: k8s-3
  hosts: workers
  become: true
  tasks:
    - name: Copy join command inside vm
      copy: src=join-command dest=/tmp/join-command.sh mode=0777

    - name: Join node to cluster
      command: sh /tmp/join-command.sh

    - name: Setup kubeconfig for vagrant user
      command: "{{ item }}"
      with_items:
        - mkdir -p /home/vagrant/.kube

    - name: Copy kubeconfig to local file
      copy: src=./admin.conf dest=/home/vagrant/.kube/config mode=0777

- name: k8s-4
  hosts: admins
  tasks:
    - name: Wait for admin to be ready 
      command: kubectl get nodes master
      register: result
      until: result.stdout.find("NotReady") == -1
      retries: 25
      delay: 5

- name: k8s-5
  hosts: solo_admins
  tasks:
    - name: Untaint admin for pod scheduling
      command: kubectl taint nodes --all node-role.kubernetes.io/master-
