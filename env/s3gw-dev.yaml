# s3gw-dev.yaml - setup a k3s cluster with longhorn and s3gw
# Copyright 2022 SUSE, LLC.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# This file was auto-generated by generate-spec.sh on 2022/13/18 16:05:39 CEST
#

apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: stripprefix
  namespace: longhorn-system
spec:
  stripPrefix:
    prefixes:
      - /longhorn
    forceSlash: false
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: longhorn-ingress
  namespace: longhorn-system
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.middlewares: longhorn-system-stripprefix@kubernetescrd
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: /longhorn
        backend:
          service:
            name: longhorn-frontend
            port:
              number: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: s3gw-secret
  namespace: longhorn-system
type: Opaque
data:
  # The Base64 encoded s3gw default user access key.
  AWS_ACCESS_KEY_ID: MDU1NWIzNTY1NGFkMTY1NmQ4MDQ=
  # The Base64 encoded s3gw default user secret key.
  AWS_SECRET_ACCESS_KEY: aDdHaHh1QkxUcmxoVlV5eFNQVUtVVjhyLzJFSTRuZ3FKeEQ3aUJkQllMaHdsdU4zMEphVDNRPT0=
  # The Base64 encoded URL http://s3gw-service.s3gw-system:80/
  AWS_ENDPOINTS: aHR0cDovL3MzZ3ctc2VydmljZS5zM2d3LXN5c3RlbTo4MC8=
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: longhorn-single
  namespace: s3gw-system
provisioner: driver.longhorn.io
allowVolumeExpansion: true
reclaimPolicy: Delete
volumeBindingMode: Immediate
parameters:
  fsType: "ext4"
  numberOfReplicas: "1"
  staleReplicaTimeout: "2880"
  fromBackup: ""

---
apiVersion: v1
kind: Namespace
metadata:
  name: s3gw-system
spec: {}
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: s3gw-pvc
  namespace: s3gw-system
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn-single
  resources:
    requests:
      storage: 2Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: s3gw-config
  namespace: s3gw-system
data:
  RGW_BACKEND_STORE: "dbstore"
  DEBUG_RGW: "1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.aquarist-labs.io/name: s3gw
  name: s3gw
  namespace: s3gw-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.aquarist-labs.io/name: s3gw
  strategy: {}
  template:
    metadata:
      labels:
        app.aquarist-labs.io/name: s3gw
    spec:
      containers:
        - name: s3gw
          image: localhost/s3gw:latest
          imagePullPolicy: Never
          args: ["--rgw-backend-store", $(RGW_BACKEND_STORE), "--debug-rgw", $(DEBUG_RGW)]
          envFrom:
            - configMapRef:
                name: s3gw-config
            - secretRef:
                name: s3gw-secret
          volumeMounts:
          - name: s3gw-lh-store
            mountPath: /data
          ports:
            - containerPort: 7480
      volumes:
      - name: s3gw-lh-store
        persistentVolumeClaim:
          claimName: s3gw-pvc
---
apiVersion: v1
kind: Secret
metadata:
  name: s3gw-secret
  namespace: s3gw-system
type: Opaque
stringData:
  RGW_DEFAULT_USER_ACCESS_KEY: "0555b35654ad1656d804"
  RGW_DEFAULT_USER_SECRET_KEY: "h7GhxuBLTrlhVUyxSPUKUV8r/2EI4ngqJxD7iBdBYLhwluN30JaT3Q=="
---
apiVersion: v1
kind: Service
metadata:
  name: s3gw-service
  namespace: s3gw-system
spec:
  selector:
    app.aquarist-labs.io/name: s3gw
  ports:
    - protocol: TCP
      port: 80
      targetPort: 7480
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: stripprefix
  namespace: s3gw-system
spec:
  stripPrefix:
    prefixes:
      - /s3gw
    forceSlash: false
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: s3gw-ingress
  namespace: s3gw-system
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.middlewares: s3gw-system-stripprefix@kubernetescrd
spec:
  rules:
    - http:
        paths:
          - path: /s3gw
            pathType: Prefix
            backend:
              service:
                name: s3gw-service
                port:
                  number: 80
